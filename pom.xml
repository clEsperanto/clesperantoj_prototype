<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.scijava</groupId>
		<artifactId>pom-scijava</artifactId>
		<version>40.0.0</version>
		<relativePath />
	</parent>

	<groupId>net.clesperanto</groupId>
	<artifactId>clesperantoj</artifactId>
	<version>0.16.8-SNAPSHOT</version>

	<properties>
		<package-name>net.clesperanto</package-name>
		<license.licenseName>bsd_3</license.licenseName>
		<license.copyrightOwners>Robert Haase, MPI CBG and Stephane Rigaud, Institut Pasteur</license.copyrightOwners>
		<!-- NB: Deploy releases to the SciJava Maven repository. -->
		<releaseProfiles>sign,deploy-to-scijava</releaseProfiles>
        <clic.version>0.16.0</clic.version>
	</properties>

	<name>clesperantoj</name>
	<description>Java wrapper for Clesperanto</description>
	<url>http://haesleinhuepf.net</url>
	<inceptionYear>2022</inceptionYear>
	<organization>
    <name>PoL, TU Dresden</name>
		<url>http://www.tu-dresden.de</url>
	</organization>
	<licenses>
		<license>
			<name>BSD 3-Clause License</name>
			<url>https://opensource.org/license/bsd-3-clause</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>haesleinhuepf</id>
			<name>Robert Haase</name>
			<url>http://haesleinhuepf.net</url>
			<organization>PoL TUD</organization>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
		<developer>
			<id>StRigaud</id>
			<name>Stephane Rigaud</name>
			<url>https://github.com/StRigaud</url>
			<organization>Institut Pasteur</organization>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
		<developer>
			<id>carlosuc3m</id>
			<name>Carlos Javier Garcia Lopez de Haro</name>
			<url>https://github.com/carlosuc3m</url>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Robert Haase</name>
			<url>http://haesleinhuepf.net</url>
			<properties><id>haesleinhuepf</id></properties>
		</contributor>
		<contributor>
			<name>Stephane Rigaud</name>
			<url>https://github.com/StRigaud</url>
			<properties><id>StRigaud</id></properties>
		</contributor>
		<contributor>
			<name>Carlos Javier Garcia Lopez de Haro</name>
			<url>https://github.com/carlosuc3m</url>
			<properties><id>carlosuc3m</id></properties>
		</contributor>
	</contributors>

  	<mailingLists>
		<mailingList>
			<name>ImageSc Forum</name>
			<archive>http://forum.image.sc/</archive>
		</mailingList>
	</mailingLists>

	<scm>
		<connection>scm:git:https://github.com/clEsperanto/clesperantoj_prototype</connection>
		<developerConnection>scm:git:git@github.com:clEsperanto/clesperantoj_prototype</developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/clEsperanto/clesperantoj_prototype</url>
	</scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/clEsperanto/clesperantoj_prototype/issues</url>
	</issueManagement>
	<ciManagement>
		<system>GitHub Actions</system>
		<url>https://github.com/clEsperanto/clesperantoj_prototype/actions</url>
	</ciManagement>

	
    <profiles>
        <profile>
            <id>win</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <compiler.option>/std:c++17</compiler.option>
                <folder.name>win64</folder.name>
            </properties>
        </profile>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <compiler.option>-std=c++17</compiler.option>
                <folder.name>macosx</folder.name>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                </os>
            </activation>
            <properties>
                <compiler.option>-std=c++17</compiler.option>
                <folder.name>linux64</folder.name>
            </properties>
        </profile>
    </profiles>



    <dependencies>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2</artifactId>
			<!-- <version>7.1.4</version> --> <!-- rely on mother pom.scijava version -->
		</dependency>
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<!-- <version>1.5.10</version> --> <!-- rely on mother pom.scijava version -->
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>ij</artifactId>
		</dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
		<repository>
			<id>scijava.public</id>
			<url>https://maven.scijava.org/content/groups/public</url>
		</repository>
	</repositories>

    <build>
		<pluginManagement>
			<plugins>
			</plugins>
		</pluginManagement>
		<!-- add gen source directory which will contain the java wrapper code generated by the javacpp parser  -->
		<plugins>
			<!-- plugin that in the clean phase removes c++ created dirs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>lib</directory>
                        </fileset>
                        <fileset>
                            <directory>native/clesperantoj/cppbuild</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
	        <!-- Execute cppbuild.sh to build cleperantoj a wrapper to clesperato.hpp -->
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<!-- TODO remove <version>1.6.0</version> -->
				<groupId>org.codehaus.mojo</groupId>
				<executions>
					<execution>
						<id>cppbuild</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>bash</executable>
							<commandlineArgs>${project.basedir}/native/cppbuild.sh</commandlineArgs>
							<workingDirectory>${project.basedir}/native</workingDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
	        <plugin>
	       		<groupId>org.codehaus.mojo</groupId>
	       		<artifactId>build-helper-maven-plugin</artifactId>
	       		<!-- TODO remove <version>3.3.0</version> -->
	       		<executions>
	                <execution>
	           			<id>add-source</id>
	           			<phase>generate-sources</phase>
	           			<goals>
	             				<goal>add-source</goal>
	           			</goals>
	                    <configuration>
	                        <sources>
	                            <source>${project.basedir}/src/gen/java</source>
	                        </sources>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
			<plugin>
		    	<artifactId>maven-compiler-plugin</artifactId>
	       		<!-- TODO remove <version>3.12.1</version> -->
		    	<configuration>
		      		<source>1.8</source>
		      		<target>1.8</target>
		    	</configuration>
		    	<executions>
			      	<execution>
			        	<id>default-compile</id>
				    </execution>
				    <execution>
			        	<id>compile-b4-javacpp-parser</id>
			        	<phase>generate-sources</phase>
			        	<goals>
			          		<goal>compile</goal>
			        	</goals>
			        	<configuration>
			          		<includes>
			            		<include>net/clesperanto/presets/*.java</include>
			          		</includes>
			        	</configuration>
			      	</execution>
		    	</executions>
			</plugin>

		    <plugin>
				<groupId>org.bytedeco</groupId>
				<artifactId>javacpp</artifactId>
				<!-- <version>1.5.10</version> -->
    			<version>${javacpp.version}</version>
				<configuration>
					<compilerOptions>
						<compilerOption>${compiler.option}</compilerOption>
					</compilerOptions>
					<classPath>${project.build.outputDirectory}</classPath>
					<includePaths>
						<!-- Include path for any header needed to build.
						The path to the OpenCL headers on Linux does not need to be included if it
						is in the PATH. On Win, it should be in the INCLUDE env var -->
						<includePath>${project.build.sourceDirectory}</includePath>
						<includePath>${basedir}/native/clesperantoj/include</includePath>
						<includePath>${basedir}/lib/${folder.name}/include/CLIc</includePath>
						<includePath>${basedir}/lib/${folder.name}/include</includePath>
					</includePaths>
					<linkPaths>
						<linkPath>${basedir}/lib/${folder.name}/</linkPath>
		                <linkPath>${basedir}/lib/${folder.name}/lib</linkPath>
						<!-- link path to the OpenCL library
						This provide the library path for javacpp to link to.
						It (should) avoid the need to add the linkpath in the presets.
						NB: Only needed on Windows unless the LIB env var contains the
						path to OpenCL lib  and teh path to Windows Kit-->
					</linkPaths>
					<copyLibs>true</copyLibs>
				</configuration>

				<executions>

					<!--  1. Parse the c++ header files specified in java files to generate java wrapper classes -->
				  	<execution>
						<id>javacpp-parser</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>parse</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/src/gen/java</outputDirectory>
							<classOrPackageNames>
								<classOrPackageName>net.clesperanto.presets.jclic</classOrPackageName>
								<classOrPackageName>net.clesperanto.presets.kernelj</classOrPackageName>
							</classOrPackageNames>
						</configuration>
					</execution>

		             <!-- 2. Process classes generated in step 1 to create c++ wrapper library -->
				  	<execution>
						<id>process-classes</id>
						<phase>process-classes</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<classOrPackageNames>
								<classOrPackageName>net.clesperanto._internals.jclic</classOrPackageName>
								<classOrPackageName>net.clesperanto._internals.kernelj</classOrPackageName>
							</classOrPackageNames>
						</configuration>
					</execution>

		        </executions>
			</plugin>

			<!-- Test plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
	       		<!-- TODO remove <version>2.22.2</version> -->
			    <configuration>
	                <forkCount>1</forkCount>
	                <reuseForks>false</reuseForks>
    				<argLine>-Xmx1024m</argLine>
			    </configuration>
            </plugin>
            <plugin>
		        <artifactId>maven-resources-plugin</artifactId>
		        <executions>
		          <execution>
		            <id>copy</id>
		            <phase>validate</phase>
		            <goals>
		              <goal>copy-resources</goal>
		            </goals>
		            <configuration>
		              <outputDirectory>${project.basedir}/target/classes/net/clesperanto</outputDirectory>
		              <resources>          
		                <resource>
						  <directory>${env.CLIC_LIBS_PATH}</directory>
		                  <filtering>false</filtering>
		                </resource>
		              </resources>              
		            </configuration>            
		          </execution>
		        </executions>
      		</plugin>
		</plugins>
	</build>

</project>
