<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.haesleinhuepf</groupId>
		<artifactId>clij-parent-pom</artifactId>
		<version>2.2.0.14</version>
		<relativePath />
	</parent>

	<groupId>net.clesperanto</groupId>
	<artifactId>clesperantoj_</artifactId>
	<version>0.0.0.1</version>

	<name>clesperantoj_</name>
	<description>clesperantoj</description>
	<url>http://haesleinhuepf.net</url>
	<inceptionYear>2022</inceptionYear>
	<organization>
    <name>PoL, TU Dresden</name>
		<url>http://www.tu-dresden.de</url>
	</organization>
	<licenses>
		<license>
			<name>Simplified BSD License</name>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>haesleinhuepf</id>
			<name>Robert Haase`</name>
			<url>http://haesleinhuepf.net</url>
			<organization>PoL TUD</organization>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

  	<mailingLists>
		<mailingList>
			<name>ImageSc Forum</name>
			<archive>http://forum.image.sc/</archive>
		</mailingList>
	</mailingLists>

	<properties>
		<package-name>net.haesleinhuepf</package-name>
		<license.licenseName>bsd_3</license.licenseName>
		<license.copyrightOwners>Robert Haase, MPI CBG</license.copyrightOwners>
		<!-- <scijava.app.directory>/PATH/TO/YOUR/FIJI/Fiji.app/</scijava.app.directory> -->
		<scijava.app.directory>/home/stephane/Libraries/Fiji.app/</scijava.app.directory>
		<!-- specify your cuda version (for windows users) -->
    	<cuda.version>11.2</cuda.version>
	</properties>
    <profiles>
        <profile>
            <id>win</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <compiler.option>/std:c++17</compiler.option>
                <folder.name>win64</folder.name>
            </properties>
        </profile>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <compiler.option>-std=c++17</compiler.option>
                <folder.name>macosx</folder.name>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                </os>
            </activation>
            <properties>
                <compiler.option>-std=c++17</compiler.option>
                <folder.name>linux64</folder.name>
            </properties>
        </profile>
    </profiles>



    <dependencies> 
        <!-- ImageJ dependencies -->
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej</artifactId>
		</dependency>
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
        <!-- JavaCPP dependencies -->
        <dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<version>1.5.8</version>
		</dependency>
    </dependencies>

    <repositories>
		<repository>
			<id>scijava.public</id>
			<url>https://maven.scijava.org/content/groups/public</url>
		</repository>
	</repositories>

    <build>
		<pluginManagement>
			<plugins>
			</plugins>
		</pluginManagement>
		<!-- add gen source directory which will contain the java wrapper code generated by the javacpp parser  -->
		<plugins>
	        <!-- Execute cppbuild.sh to build cleperantoj a wrapper to clesperato.hpp -->
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<groupId>org.codehaus.mojo</groupId>
				<executions>
					<execution>
						<id>cppbuild</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>bash</executable>
							<commandlineArgs>${project.basedir}/native/cppbuild.sh</commandlineArgs>
							<workingDirectory>${project.basedir}/native</workingDirectory>
						</configuration>
					</execution>
				</executions> 
			</plugin>
	        <plugin>
	       		<groupId>org.codehaus.mojo</groupId>
	       		<artifactId>build-helper-maven-plugin</artifactId>
	       		<version>3.3.0</version>
	       		<executions>
	                <execution>
	           			<id>add-source</id>
	           			<phase>generate-sources</phase>
	           			<goals>
	             				<goal>add-source</goal>
	           			</goals>
	                    <configuration>
	                        <sources>
	                            <source>${project.basedir}/src/gen/java</source>
	                        </sources>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
			<plugin>
		    	<artifactId>maven-compiler-plugin</artifactId>
		    	<version>3.12.1</version>
		    	<configuration>
		      		<source>1.8</source>
		      		<target>1.8</target>
		    	</configuration>
		    	<executions>
			      	<execution>
			        	<id>default-compile</id>
				    </execution>
				    <execution>
			        	<id>compile-b4-javacpp-parser</id>
			        	<phase>generate-sources</phase>
			        	<goals>
			          		<goal>compile</goal>
			        	</goals>
			        	<configuration>
			          		<includes>
			            		<include>net/clesperanto/presets/*.java</include>
			          		</includes>
			        	</configuration>
			      	</execution>
		    	</executions>
			</plugin>

		    <plugin>
				<groupId>org.bytedeco</groupId>
				<artifactId>javacpp</artifactId>
				<version>1.5.8</version>
				<configuration>
					<compilerOptions>
						<compilerOption>${compiler.option}</compilerOption>
					</compilerOptions>
					<classPath>${project.build.outputDirectory}</classPath>
					<includePaths>
						<!-- Include path for any header needed to build.
						The path to the OpenCL headers on Linux does not need to be included if it
						is in the PATH. On Win, it should be in the INCLUDE env var -->
						<includePath>${project.build.sourceDirectory}</includePath>
						<includePath>${basedir}/native/clesperantoj/include</includePath>
						<includePath>${basedir}/lib/${folder.name}/include/CLIc</includePath>
					</includePaths>
					<linkPaths>
						<linkPath>${basedir}/lib/${folder.name}/</linkPath>
		                <linkPath>${basedir}/lib/${folder.name}/lib</linkPath>
						<!-- link path to the OpenCL library
						This provide the library path for javacpp to link to.
						It (should) avoid the need to add the linkpath in the presets.
						NB: Only needed on Windows unless the LIB env var contains the 
						path to OpenCL lib  and teh path to Windows Kit-->
					</linkPaths>
					<copyLibs>true</copyLibs>
				</configuration>
		
				<executions>
		
					<!--  1. Parse the c++ header files specified in java files to generate java wrapper classes -->
				  	<execution>
						<id>javacpp-parser</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>parse</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/src/gen/java</outputDirectory>
							<classOrPackageNames>
								<classOrPackageName>net.clesperanto.presets.clesperantoj</classOrPackageName>
								<classOrPackageName>net.clesperanto.presets.kernelj</classOrPackageName>
							</classOrPackageNames>
						</configuration>
					</execution>
		
		             <!-- 2. Process classes generated in step 1 to create c++ wrapper library -->
				  	<execution>
						<id>process-classes</id>
						<phase>process-classes</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<classOrPackageNames>
								<classOrPackageName>net.clesperanto.wrapper.clesperantoj</classOrPackageName>
								<classOrPackageName>net.clesperanto.wrapper.kernelj</classOrPackageName>
							</classOrPackageNames>
						</configuration>
					</execution> 
		
		        </executions>
			</plugin>
			
			<!-- Test plugin -->
	        <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<argLine>-Xmx2G</argLine>
				</configuration>
			</plugin>
		
		</plugins>
	</build>

</project>
